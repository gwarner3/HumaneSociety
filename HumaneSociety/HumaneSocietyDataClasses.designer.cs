#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumaneSociety
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class HumaneSocietyDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdopter(Adopter instance);
    partial void UpdateAdopter(Adopter instance);
    partial void DeleteAdopter(Adopter instance);
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertAnimalType(AnimalType instance);
    partial void UpdateAnimalType(AnimalType instance);
    partial void DeleteAnimalType(AnimalType instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    #endregion
		
		public HumaneSocietyDataClassesDataContext() : 
				base(global::HumaneSociety.Properties.Settings.Default.HumaneSocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adopter> Adopters
		{
			get
			{
				return this.GetTable<Adopter>();
			}
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<AnimalType> AnimalTypes
		{
			get
			{
				return this.GetTable<AnimalType>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adopter")]
	public partial class Adopter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Adopter_ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.DateTime _DOB;
		
		private System.Nullable<int> _AnnualIncome;
		
		private string _Bio;
		
		private System.Nullable<int> _Gender_ID;
		
		private EntitySet<Animal> _Animals;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Gender> _Gender;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdopter_IDChanging(int value);
    partial void OnAdopter_IDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnAnnualIncomeChanging(System.Nullable<int> value);
    partial void OnAnnualIncomeChanged();
    partial void OnBioChanging(string value);
    partial void OnBioChanged();
    partial void OnGender_IDChanging(System.Nullable<int> value);
    partial void OnGender_IDChanged();
    #endregion
		
		public Adopter()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Gender = default(EntityRef<Gender>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adopter_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Adopter_ID
		{
			get
			{
				return this._Adopter_ID;
			}
			set
			{
				if ((this._Adopter_ID != value))
				{
					this.OnAdopter_IDChanging(value);
					this.SendPropertyChanging();
					this._Adopter_ID = value;
					this.SendPropertyChanged("Adopter_ID");
					this.OnAdopter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualIncome", DbType="Int")]
		public System.Nullable<int> AnnualIncome
		{
			get
			{
				return this._AnnualIncome;
			}
			set
			{
				if ((this._AnnualIncome != value))
				{
					this.OnAnnualIncomeChanging(value);
					this.SendPropertyChanging();
					this._AnnualIncome = value;
					this.SendPropertyChanged("AnnualIncome");
					this.OnAnnualIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bio", DbType="VarChar(255)")]
		public string Bio
		{
			get
			{
				return this._Bio;
			}
			set
			{
				if ((this._Bio != value))
				{
					this.OnBioChanging(value);
					this.SendPropertyChanging();
					this._Bio = value;
					this.SendPropertyChanged("Bio");
					this.OnBioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_ID", DbType="Int")]
		public System.Nullable<int> Gender_ID
		{
			get
			{
				return this._Gender_ID;
			}
			set
			{
				if ((this._Gender_ID != value))
				{
					if (this._Gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGender_IDChanging(value);
					this.SendPropertyChanging();
					this._Gender_ID = value;
					this.SendPropertyChanged("Gender_ID");
					this.OnGender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Animal", Storage="_Animals", ThisKey="Adopter_ID", OtherKey="Adopter_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Payment", Storage="_Payments", ThisKey="Adopter_ID", OtherKey="Adopter_ID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Adopter", Storage="_Gender", ThisKey="Gender_ID", OtherKey="Gender_ID", IsForeignKey=true)]
		public Gender Gender
		{
			get
			{
				return this._Gender.Entity;
			}
			set
			{
				Gender previousValue = this._Gender.Entity;
				if (((previousValue != value) 
							|| (this._Gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender.Entity = null;
						previousValue.Adopters.Remove(this);
					}
					this._Gender.Entity = value;
					if ((value != null))
					{
						value.Adopters.Add(this);
						this._Gender_ID = value.Gender_ID;
					}
					else
					{
						this._Gender_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gender");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Adopter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animal")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Animal_ID;
		
		private string _Name;
		
		private System.DateTime _DOB;
		
		private decimal _Price;
		
		private string _HasShoots;
		
		private System.Nullable<int> _Adopter_ID;
		
		private System.Nullable<int> _AnimalType_ID;
		
		private System.Nullable<int> _Food_ID;
		
		private System.Nullable<int> _Room_ID;
		
		private System.Nullable<int> _Gender_ID;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Adopter> _Adopter;
		
		private EntityRef<AnimalType> _AnimalType;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<Gender> _Gender;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimal_IDChanging(int value);
    partial void OnAnimal_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnHasShootsChanging(string value);
    partial void OnHasShootsChanged();
    partial void OnAdopter_IDChanging(System.Nullable<int> value);
    partial void OnAdopter_IDChanged();
    partial void OnAnimalType_IDChanging(System.Nullable<int> value);
    partial void OnAnimalType_IDChanged();
    partial void OnFood_IDChanging(System.Nullable<int> value);
    partial void OnFood_IDChanged();
    partial void OnRoom_IDChanging(System.Nullable<int> value);
    partial void OnRoom_IDChanged();
    partial void OnGender_IDChanging(System.Nullable<int> value);
    partial void OnGender_IDChanged();
    #endregion
		
		public Animal()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Adopter = default(EntityRef<Adopter>);
			this._AnimalType = default(EntityRef<AnimalType>);
			this._Food = default(EntityRef<Food>);
			this._Gender = default(EntityRef<Gender>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Animal_ID
		{
			get
			{
				return this._Animal_ID;
			}
			set
			{
				if ((this._Animal_ID != value))
				{
					this.OnAnimal_IDChanging(value);
					this.SendPropertyChanging();
					this._Animal_ID = value;
					this.SendPropertyChanged("Animal_ID");
					this.OnAnimal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasShoots", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string HasShoots
		{
			get
			{
				return this._HasShoots;
			}
			set
			{
				if ((this._HasShoots != value))
				{
					this.OnHasShootsChanging(value);
					this.SendPropertyChanging();
					this._HasShoots = value;
					this.SendPropertyChanged("HasShoots");
					this.OnHasShootsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adopter_ID", DbType="Int")]
		public System.Nullable<int> Adopter_ID
		{
			get
			{
				return this._Adopter_ID;
			}
			set
			{
				if ((this._Adopter_ID != value))
				{
					if (this._Adopter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdopter_IDChanging(value);
					this.SendPropertyChanging();
					this._Adopter_ID = value;
					this.SendPropertyChanged("Adopter_ID");
					this.OnAdopter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalType_ID", DbType="Int")]
		public System.Nullable<int> AnimalType_ID
		{
			get
			{
				return this._AnimalType_ID;
			}
			set
			{
				if ((this._AnimalType_ID != value))
				{
					if (this._AnimalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimalType_IDChanging(value);
					this.SendPropertyChanging();
					this._AnimalType_ID = value;
					this.SendPropertyChanged("AnimalType_ID");
					this.OnAnimalType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food_ID", DbType="Int")]
		public System.Nullable<int> Food_ID
		{
			get
			{
				return this._Food_ID;
			}
			set
			{
				if ((this._Food_ID != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFood_IDChanging(value);
					this.SendPropertyChanging();
					this._Food_ID = value;
					this.SendPropertyChanged("Food_ID");
					this.OnFood_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int")]
		public System.Nullable<int> Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_ID", DbType="Int")]
		public System.Nullable<int> Gender_ID
		{
			get
			{
				return this._Gender_ID;
			}
			set
			{
				if ((this._Gender_ID != value))
				{
					if (this._Gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGender_IDChanging(value);
					this.SendPropertyChanging();
					this._Gender_ID = value;
					this.SendPropertyChanged("Gender_ID");
					this.OnGender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Payment", Storage="_Payments", ThisKey="Animal_ID", OtherKey="Animal_ID")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Animal", Storage="_Adopter", ThisKey="Adopter_ID", OtherKey="Adopter_ID", IsForeignKey=true)]
		public Adopter Adopter
		{
			get
			{
				return this._Adopter.Entity;
			}
			set
			{
				Adopter previousValue = this._Adopter.Entity;
				if (((previousValue != value) 
							|| (this._Adopter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adopter.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Adopter.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Adopter_ID = value.Adopter_ID;
					}
					else
					{
						this._Adopter_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adopter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnimalType_Animal", Storage="_AnimalType", ThisKey="AnimalType_ID", OtherKey="AnimalType_ID", IsForeignKey=true)]
		public AnimalType AnimalType
		{
			get
			{
				return this._AnimalType.Entity;
			}
			set
			{
				AnimalType previousValue = this._AnimalType.Entity;
				if (((previousValue != value) 
							|| (this._AnimalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnimalType.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._AnimalType.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._AnimalType_ID = value.AnimalType_ID;
					}
					else
					{
						this._AnimalType_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AnimalType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Animal", Storage="_Food", ThisKey="Food_ID", OtherKey="Food_ID", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Food_ID = value.Food_ID;
					}
					else
					{
						this._Food_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Animal", Storage="_Gender", ThisKey="Gender_ID", OtherKey="Gender_ID", IsForeignKey=true)]
		public Gender Gender
		{
			get
			{
				return this._Gender.Entity;
			}
			set
			{
				Gender previousValue = this._Gender.Entity;
				if (((previousValue != value) 
							|| (this._Gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Gender.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Gender_ID = value.Gender_ID;
					}
					else
					{
						this._Gender_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Animal", Storage="_Room", ThisKey="Room_ID", OtherKey="Room_ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Animals.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Animals.Add(this);
						this._Room_ID = value.Room_ID;
					}
					else
					{
						this._Room_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnimalType")]
	public partial class AnimalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnimalType_ID;
		
		private string _TypeName;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimalType_IDChanging(int value);
    partial void OnAnimalType_IDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public AnimalType()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalType_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnimalType_ID
		{
			get
			{
				return this._AnimalType_ID;
			}
			set
			{
				if ((this._AnimalType_ID != value))
				{
					this.OnAnimalType_IDChanging(value);
					this.SendPropertyChanging();
					this._AnimalType_ID = value;
					this.SendPropertyChanged("AnimalType_ID");
					this.OnAnimalType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnimalType_Animal", Storage="_Animals", ThisKey="AnimalType_ID", OtherKey="AnimalType_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.AnimalType = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.AnimalType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food")]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Food_ID;
		
		private string _Name;
		
		private int _WeeklyServing;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFood_IDChanging(int value);
    partial void OnFood_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeeklyServingChanging(int value);
    partial void OnWeeklyServingChanged();
    #endregion
		
		public Food()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Food_ID
		{
			get
			{
				return this._Food_ID;
			}
			set
			{
				if ((this._Food_ID != value))
				{
					this.OnFood_IDChanging(value);
					this.SendPropertyChanging();
					this._Food_ID = value;
					this.SendPropertyChanged("Food_ID");
					this.OnFood_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyServing", DbType="Int NOT NULL")]
		public int WeeklyServing
		{
			get
			{
				return this._WeeklyServing;
			}
			set
			{
				if ((this._WeeklyServing != value))
				{
					this.OnWeeklyServingChanging(value);
					this.SendPropertyChanging();
					this._WeeklyServing = value;
					this.SendPropertyChanged("WeeklyServing");
					this.OnWeeklyServingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Animal", Storage="_Animals", ThisKey="Food_ID", OtherKey="Food_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Gender_ID;
		
		private string _Gender1;
		
		private EntitySet<Adopter> _Adopters;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGender_IDChanging(int value);
    partial void OnGender_IDChanged();
    partial void OnGender1Changing(string value);
    partial void OnGender1Changed();
    #endregion
		
		public Gender()
		{
			this._Adopters = new EntitySet<Adopter>(new Action<Adopter>(this.attach_Adopters), new Action<Adopter>(this.detach_Adopters));
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Gender_ID
		{
			get
			{
				return this._Gender_ID;
			}
			set
			{
				if ((this._Gender_ID != value))
				{
					this.OnGender_IDChanging(value);
					this.SendPropertyChanging();
					this._Gender_ID = value;
					this.SendPropertyChanged("Gender_ID");
					this.OnGender_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Gender", Storage="_Gender1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gender1
		{
			get
			{
				return this._Gender1;
			}
			set
			{
				if ((this._Gender1 != value))
				{
					this.OnGender1Changing(value);
					this.SendPropertyChanging();
					this._Gender1 = value;
					this.SendPropertyChanged("Gender1");
					this.OnGender1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Adopter", Storage="_Adopters", ThisKey="Gender_ID", OtherKey="Gender_ID")]
		public EntitySet<Adopter> Adopters
		{
			get
			{
				return this._Adopters;
			}
			set
			{
				this._Adopters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Animal", Storage="_Animals", ThisKey="Gender_ID", OtherKey="Gender_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Gender = this;
		}
		
		private void detach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Gender = null;
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Gender = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Gender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Room_ID;
		
		private string _Number;
		
		private EntitySet<Animal> _Animals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoom_IDChanging(int value);
    partial void OnRoom_IDChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public Room()
		{
			this._Animals = new EntitySet<Animal>(new Action<Animal>(this.attach_Animals), new Action<Animal>(this.detach_Animals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Animal", Storage="_Animals", ThisKey="Room_ID", OtherKey="Room_ID")]
		public EntitySet<Animal> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				this._Animals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Animals(Animal entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Payment_ID;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.Nullable<int> _Adopter_ID;
		
		private System.Nullable<int> _Animal_ID;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Adopter> _Adopter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayment_IDChanging(int value);
    partial void OnPayment_IDChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountChanged();
    partial void OnAdopter_IDChanging(System.Nullable<int> value);
    partial void OnAdopter_IDChanged();
    partial void OnAnimal_IDChanging(System.Nullable<int> value);
    partial void OnAnimal_IDChanged();
    #endregion
		
		public Payment()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Adopter = default(EntityRef<Adopter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Payment_ID
		{
			get
			{
				return this._Payment_ID;
			}
			set
			{
				if ((this._Payment_ID != value))
				{
					this.OnPayment_IDChanging(value);
					this.SendPropertyChanging();
					this._Payment_ID = value;
					this.SendPropertyChanged("Payment_ID");
					this.OnPayment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="SmallMoney")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adopter_ID", DbType="Int")]
		public System.Nullable<int> Adopter_ID
		{
			get
			{
				return this._Adopter_ID;
			}
			set
			{
				if ((this._Adopter_ID != value))
				{
					if (this._Adopter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdopter_IDChanging(value);
					this.SendPropertyChanging();
					this._Adopter_ID = value;
					this.SendPropertyChanged("Adopter_ID");
					this.OnAdopter_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal_ID", DbType="Int")]
		public System.Nullable<int> Animal_ID
		{
			get
			{
				return this._Animal_ID;
			}
			set
			{
				if ((this._Animal_ID != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimal_IDChanging(value);
					this.SendPropertyChanging();
					this._Animal_ID = value;
					this.SendPropertyChanged("Animal_ID");
					this.OnAnimal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Payment", Storage="_Animal", ThisKey="Animal_ID", OtherKey="Animal_ID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Animal_ID = value.Animal_ID;
					}
					else
					{
						this._Animal_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adopter_Payment", Storage="_Adopter", ThisKey="Adopter_ID", OtherKey="Adopter_ID", IsForeignKey=true)]
		public Adopter Adopter
		{
			get
			{
				return this._Adopter.Entity;
			}
			set
			{
				Adopter previousValue = this._Adopter.Entity;
				if (((previousValue != value) 
							|| (this._Adopter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adopter.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Adopter.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Adopter_ID = value.Adopter_ID;
					}
					else
					{
						this._Adopter_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adopter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
